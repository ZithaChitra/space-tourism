:root{--font-body:Arial,sans-serif;--bellefair:"Bellefair",serif;--barlow:"Barlow",sans-serif;--black:#000;--rich-black:#0c0e18;--lavender-blue:#d2d8f9;--white:#fff}html{box-sizing:border-box;font-size:100%}*,:after,:before{box-sizing:inherit}body{margin:0;padding:0}.flex{display:flex}.flex-c{flex-direction:column}.flex-jc-sb{justify-content:space-between}.flex-jc-c{justify-content:center}.flex-jc-s{justify-content:start}.flex-ai-c{align-items:center}.flex-ai-s{align-items:flex-start}@media (max-width:767px){.hide-for-mobile{display:None}}@media (min-width:768px){.hide-for-tablet{display:none}}@media (min-width:1150px){.hide-for-desktop{display:None}}.pad-l{padding-left:1.9375rem}@media (min-width:1150px){.pad-l{padding-left:10.25rem}}.pad-r{padding-right:1.9375rem}@media (min-width:1150px){.pad-r{padding-right:10.25rem}}.pad-lr{padding-left:1.9375rem;padding-right:1.9375rem}@media (min-width:1150px){.pad-lr{padding-left:10.125rem;padding-right:10.125rem}}h1,h2,h3,h4{color:#fff;line-height:1.1;margin:0;text-transform:uppercase}h5{color:#fff;font-family:var(--barlow);margin-top:0}p{color:var(--lavender-blue);font-size:.9375rem;line-height:1.5625rem;text-align:center}@media (min-width:768px){p{font-size:1rem;line-height:1.75rem}}a,a:active,a:visited{color:#fff;text-decoration:none}.container{margin:0 auto;max-width:69.375rem;padding:0 1.5rem}@media (min-width:1150px){.container{padding:0;transform:translate(0)}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */